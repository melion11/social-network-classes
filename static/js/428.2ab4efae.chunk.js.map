{"version":3,"file":"static/js/428.2ab4efae.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileHeader/ProfileHeader.module.css?4d2d","webpack://samurai-way/./src/components/Profile/ProfileStatus/ProfileStatus.module.css?1f32","components/Profile/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileHeader/ProfileHeader.tsx","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileDescription/ProfileDescription.module.css?81bc","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileDescription/ProfileContacts/ProfileContacts.module.css?3a6e","components/Profile/ProfileInfo/ProfileDescription/ProfileContacts/ProfileContacts.tsx","components/Profile/ProfileInfo/ProfileDescription/ProfileDescription.tsx","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileDescriptionForm/ProfileDescriptionForm.module.css?4ec4","components/Profile/ProfileInfo/ProfileDescriptionForm/ProfileDescriptionForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/AddPostForm/AddPostForm.module.css?7b47","components/Profile/MyPosts/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://samurai-way/./src/components/common/FormControls/FormsControls.module.css?3030","components/common/FormControls/FormsControls.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__7AaCY\",\"content__image\":\"Profile_content__image__UVvur\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__LEh+5\",\"profile__content\":\"ProfileInfo_profile__content__mHGfy\",\"profile__overlay\":\"ProfileInfo_profile__overlay__CHOC0\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile__header\":\"ProfileHeader_profile__header__usqyZ\",\"imageContainer\":\"ProfileHeader_imageContainer__dfJ3g\",\"profile__avatar\":\"ProfileHeader_profile__avatar__UJCtv\"};","// extracted by mini-css-extract-plugin\nexport default {\"status-container\":\"ProfileStatus_status-container__Jnb6y\",\"status-span\":\"ProfileStatus_status-span__43prM\",\"status-input\":\"ProfileStatus_status-input__lUeSF\"};","import React, {ChangeEvent, createRef, useEffect, useRef, useState} from 'react';\r\nimport s from './ProfileStatus.module.css'\r\n\r\n\r\nexport type ProfileInfoPropsType = {\r\n    userStatus: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\n\r\nexport const ProfileStatus: React.FC<ProfileInfoPropsType> = (props) => {\r\n    const {userStatus, updateStatus, isOwner} = props\r\n\r\n   const [editMode, setEditMode] = useState(false)\r\n   const [status, setStatus] = useState(userStatus)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        updateStatus(status)\r\n        setEditMode(false)\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        setStatus(userStatus)\r\n    }, [userStatus])\r\n\r\n\r\n   const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const spanMode = <span className={s['status-span']} onDoubleClick={activateEditMode}>\r\n            {userStatus || 'Click to add status'}\r\n        </span>\r\n\r\n\r\n    const inputMode = <input className={s['status-input']} autoFocus={true} value={status}\r\n                             onChange={onChangeHandler} onBlur={deActivateEditMode}/>\r\n\r\n\r\n        return (\r\n            <div className={s['status-container']}>\r\n                {isOwner && editMode ? inputMode : spanMode}\r\n            </div>\r\n        )\r\n\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './ProfileHeader.module.css'\r\nimport {ProfileStatus} from '../../ProfileStatus/ProfileStatus';\r\nimport {UserProfileType} from '../../../../redux/reducers/profileReducer';\r\n\r\n\r\n\r\nexport type ProfileHeaderPropsType = {\r\n    userProfile: UserProfileType\r\n    userStatus: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    updatePhoto: (photoFile: File) => void\r\n}\r\n\r\n\r\nexport const ProfileHeader: React.FC<ProfileHeaderPropsType> = (props) => {\r\n    const {userProfile, userStatus, updateStatus, isOwner, updatePhoto} = props\r\n\r\n\r\n    const onChangePhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            updatePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.profile__header}>\r\n            <div className={s.imageContainer}>\r\n                <img className={s.profile__avatar}\r\n                    src={userProfile.photos.large || 'https://placehold.co/50x50?text=No+Avatar'}\r\n                    alt=\"avatar\"\r\n                />\r\n                {isOwner && <input onChange={onChangePhotoHandler} type=\"file\" />}\r\n            </div>\r\n            <ProfileStatus\r\n                userStatus={userStatus}\r\n                updateStatus={updateStatus}\r\n                isOwner={isOwner}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile__description\":\"ProfileDescription_profile__description__Bri77\",\"profile__item\":\"ProfileDescription_profile__item__YZNab\",\"profile__label\":\"ProfileDescription_profile__label__ubyzV\",\"profile__text\":\"ProfileDescription_profile__text__qezfN\",\"profile__edit\":\"ProfileDescription_profile__edit__Lrwk-\",\"profile__contacts\":\"ProfileDescription_profile__contacts__UxbD8\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile__links\":\"ProfileContacts_profile__links__E2wob\",\"profile__link\":\"ProfileContacts_profile__link__lDFDr\"};","import React from 'react';\r\nimport s from './ProfileContacts.module.css'\r\n\r\n\r\n\r\n\r\nexport type ProfileInfoPropsType = {\r\n    title: string\r\n    [key: string]: string\r\n\r\n}\r\n\r\n\r\nexport const ProfileContacts: React.FC<ProfileInfoPropsType> = (props) => {\r\n    const {title, value} = props\r\n\r\n    return (\r\n        <div className={s.profile__links}>\r\n            <a className={s.profile__link} href={value} target=\"_blank\"\r\n               rel=\"noopener noreferrer\">{title}</a>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './ProfileDescription.module.css'\r\nimport {ProfileContacts} from './ProfileContacts/ProfileContacts';\r\nimport {UserProfileType} from '../../../../redux/reducers/profileReducer';\r\n\r\n\r\nexport type ProfileInfoPropsType = {\r\n    userProfile: UserProfileType\r\n    isOwner: boolean\r\n    goToEditMode: ()=> void\r\n}\r\n\r\n\r\nexport const ProfileDescription: React.FC<ProfileInfoPropsType> = (props) => {\r\n    const {userProfile, isOwner, goToEditMode} = props\r\n\r\n    return (\r\n        <div className={s.profile__description}>\r\n            {isOwner && <div><button className={s.profile__edit} onClick={goToEditMode}>Edit</button></div>}\r\n            <div className={s.profile__item}>\r\n\r\n                <h2 className={s.profile__name}>{userProfile.fullName}</h2>\r\n                <span className={s.profile__label}>About me:</span>\r\n                <span className={s.profile__text}>{userProfile.aboutMe}</span>\r\n            </div>\r\n            <div className={s.profile__item}>\r\n                <span className={s.profile__label}>Looking for a job:</span>\r\n                <span className={s.profile__text}>{userProfile.lookingForAJob ? '💼' : '😀'}</span>\r\n            </div>\r\n            <div className={s.profile__item}>\r\n                <div className={s.profile__label}>My professional skills:</div>\r\n                <div className={s.profile__text}>\r\n                    <p>{userProfile.lookingForAJobDescription}</p>\r\n                </div>\r\n            </div>\r\n            <div className={s.profile__contacts}>\r\n                <div className={s.profile__label}>Contacts:</div>\r\n                {Object.keys(userProfile.contacts).map((key: string) => {\r\n                        return <ProfileContacts key={key} title={key} value={userProfile.contacts[key]}/>\r\n                    })}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile__description\":\"ProfileDescriptionForm_profile__description__p7EMQ\",\"profile__item\":\"ProfileDescriptionForm_profile__item__Ulm5C\",\"profile__label\":\"ProfileDescriptionForm_profile__label__Yoz2X\",\"button__container\":\"ProfileDescriptionForm_button__container__tMbPt\",\"profile__contacts\":\"ProfileDescriptionForm_profile__contacts__Eh8zh\",\"profile__contact\":\"ProfileDescriptionForm_profile__contact__HuzIo\"};","import React from 'react';\r\nimport s from './ProfileDescriptionForm.module.css'\r\nimport {createField, Input, Textarea} from '../../../common/FormControls/FormsControls';\r\nimport {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {UserProfileContacts, UserProfileType} from '../../../../redux/reducers/profileReducer';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type ProfileDescriptionDataFormType = {\r\n    aboutMe: string\r\n    contacts: UserProfileContacts\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n}\r\n\r\nexport type AdditionalPropsProfileFormType = {\r\n    userProfile: UserProfileType\r\n}\r\n\r\nconst ProfileDescriptionForm: React.FC<InjectedFormProps<ProfileDescriptionDataFormType & AdditionalPropsProfileFormType> & AdditionalPropsProfileFormType> = ({handleSubmit,userProfile, initialValues,  error})=> {\r\n\r\n\r\n    return  (\r\n        <form className={s.profile__description} onSubmit={handleSubmit}>\r\n            <div className={s.profile__item}>\r\n        <span className={s.profile__label}>\r\n          Full name:\r\n        </span>\r\n                {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div className={s.profile__item}>\r\n        <span className={s.profile__label}>\r\n          About me:\r\n        </span>\r\n                {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div className={s.profile__item}>\r\n        <span className={s.profile__label}>\r\n          Looking for a job:\r\n        </span>\r\n                {createField('', 'lookingForAJob',[], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div className={s.profile__item}>\r\n        <span className={s.profile__label}>\r\n          My professional skills:\r\n        </span>\r\n                <div className={s.profile__text}>\r\n                    {createField('My professional skills', 'lookingForAJobDescription',[], Textarea)}\r\n                </div>\r\n            </div>\r\n            <div className={s.profile__item}>\r\n        <span className={s.profile__label}>\r\n          Contacts:\r\n        </span>\r\n                <div className={s.profile__contacts}>\r\n                    {Object.keys(userProfile.contacts).map((key: string) => {\r\n                        return (\r\n                            <div key={key} className={s.profile__contact}>\r\n                                {createField(key, `contacts.${key}`, [], Input)}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className={s.button__container}>\r\n                <button>Save</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm<ProfileDescriptionDataFormType & AdditionalPropsProfileFormType, any>\r\n({form: 'edit-profile'})(ProfileDescriptionForm);","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileHeader} from './ProfileHeader/ProfileHeader';\r\nimport {ProfileDescription} from './ProfileDescription/ProfileDescription';\r\nimport ProfileDescriptionForm, {ProfileDescriptionDataFormType} from './ProfileDescriptionForm/ProfileDescriptionForm';\r\nimport {UserProfileType} from '../../../redux/reducers/profileReducer';\r\n\r\n\r\n\r\nexport type ProfileInfoPropsType = {\r\n    userProfile: UserProfileType\r\n    userStatus: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    updatePhoto: (photoFile: File) => void\r\n    saveProfile: (newProfileData: ProfileDescriptionDataFormType)=> Promise<void | string>\r\n}\r\n\r\n\r\n\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n    const {userProfile, userStatus, updateStatus, isOwner, updatePhoto, saveProfile} = props\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const goToEditModeHandler = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const handleSubmit = (newProfileData: ProfileDescriptionDataFormType) => {\r\n        saveProfile(newProfileData).then(()=> {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.profile__overlay}></div>\r\n            <div className={s.profile__content }>\r\n                <ProfileHeader userProfile={userProfile} userStatus={userStatus}\r\n                               updateStatus={updateStatus} isOwner={isOwner}\r\n                               updatePhoto={updatePhoto}\r\n                />\r\n                {editMode ?\r\n                    <ProfileDescriptionForm initialValues={userProfile} userProfile={userProfile} onSubmit={handleSubmit}/> :\r\n                    <ProfileDescription goToEditMode={goToEditModeHandler} isOwner={isOwner} userProfile={userProfile}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"postContainer\":\"MyPosts_postContainer__BI7sh\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__qzhSE\",\"postWrap\":\"Post_postWrap__Ptawq\",\"avatarImage\":\"Post_avatarImage__SYQm6\",\"likeWrap\":\"Post_likeWrap__a5TM-\",\"likeIcon\":\"Post_likeIcon__EPoMU\",\"likeCount\":\"Post_likeCount__sORsr\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nexport type PostPropsType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport const Post = (props: PostPropsType) => {\r\n\r\n        return (\r\n            <div className={s.post}>\r\n                <div className={s.postWrap}>\r\n                    <img\r\n                        className={s.avatarImage}\r\n                        loading=\"lazy\"\r\n                        src={'https://avatars.mds.yandex.net/i?id=9690567e5e6fb690dc43597b14148235a9c6a99e-9167398-images-thumbs&n=13'}\r\n                        alt={'avatar'}\r\n                    />\r\n                    <p>{props.message}</p>\r\n                </div>\r\n                <div className={s.likeWrap}>\r\n                    <span className={s.likeIcon}></span>\r\n                    <span className={s.likeCount}>like: {props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postContainer\":\"AddPostForm_postContainer__ORdrv\",\"postForm\":\"AddPostForm_postForm__aR+aR\",\"postInputContainer\":\"AddPostForm_postInputContainer__OpPBe\",\"postInput\":\"AddPostForm_postInput__9S4u5\",\"postButton\":\"AddPostForm_postButton__6sWZM\"};","import React, {FC} from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport s from './AddPostForm.module.css'\r\nimport {maxLength, required} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/FormControls/FormsControls';\r\n\r\nexport type InputDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\ntype AddPostPropsType = {\r\n\r\n}\r\n\r\nconst maxLength20 = maxLength(20)\r\n\r\nconst AddPostForm: FC<InjectedFormProps<InputDataType>> = (props) => {\r\n\r\n    const { handleSubmit} = props;\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.postContainer}>\r\n            <form className={s.postForm} onSubmit={handleSubmit}>\r\n                <div className={s.postInputContainer}>\r\n                    <Field\r\n                        className={s.postInput}\r\n                        component={Textarea}\r\n                        name=\"newMessageBody\"\r\n                        validate={[required, maxLength20]}\r\n                        placeholder=\"Write your post...\"\r\n                    />\r\n                </div>\r\n                <button className={s.postButton} type=\"submit\">\r\n                    Add Post\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm<InputDataType, AddPostPropsType>({\r\n    form: 'postForm',\r\n})(AddPostForm)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {MyPosts} from './MyPosts';\r\nimport {addPost, PostType} from '../../../redux/reducers/profileReducer';\r\nimport {StateType} from '../../../redux/redux-store';\r\n\r\n\r\n\r\ntype MapStateToProps = {\r\n    posts: PostType[]\r\n\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    addPost: (newPostText: string)=>void\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\r\n\r\n\r\n\r\n","import React, {FC} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport AddPostForm, {InputDataType} from './AddPostForm/AddPostForm';\r\nimport {PostType} from '../../../redux/reducers/profileReducer';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type MyPostsPropsType = {\r\n    posts: PostType[]\r\n    addPost: (newMessageBody: string)=>void\r\n}\r\n\r\nexport const MyPosts : React.FC<MyPostsPropsType>= (props) => {\r\n   const {posts, addPost} = props\r\n\r\n    const postsElements = posts.map(post => <Post key={post.id} id={post.id} message={post.message} likeCount={post.likeCount}/>)\r\n\r\n\r\n    const addNewPostHandler = (values: InputDataType) => {\r\n        addPost(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n    <div className={s.postContainer}>\r\n           <AddPostForm onSubmit={addNewPostHandler}/>\r\n        <div className={s.postList}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport {ProfileDescriptionDataFormType} from './ProfileInfo/ProfileDescriptionForm/ProfileDescriptionForm';\r\nimport {UserProfileType} from '../../redux/reducers/profileReducer';\r\n\r\n\r\nexport type ProfilePropsType = {\r\n    userProfile: UserProfileType\r\n    userStatus: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    updatePhoto: (photoFile: File) => void\r\n    saveProfile: (newProfileData: ProfileDescriptionDataFormType)=> Promise<void | string>\r\n}\r\n\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\r\n    const {userProfile, userStatus, updateStatus, isOwner, updatePhoto, saveProfile} = props\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo userProfile={userProfile} userStatus={userStatus}\r\n                         updateStatus={updateStatus} isOwner={isOwner}\r\n                            updatePhoto={updatePhoto} saveProfile={saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Profile} from './Profile';\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    saveProfile,\r\n    updatePhoto,\r\n    updateStatus,\r\n    UserProfileType\r\n} from '../../redux/reducers/profileReducer';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withRedirect} from '../../hoc/withRedirect';\r\nimport {compose} from 'redux';\r\nimport {toggleIsFetching} from '../../redux/reducers/appReducer';\r\nimport {ProfileDescriptionDataFormType} from './ProfileInfo/ProfileDescriptionForm/ProfileDescriptionForm';\r\nimport {StateType} from '../../redux/redux-store';\r\n\r\n\r\nexport type MapStateToPropsType = {\r\n    userProfile: UserProfileType\r\n    isFetching: boolean\r\n    userStatus: string\r\n    authUserId: number | null\r\n    isAuth: boolean\r\n\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    updatePhoto: (photoFile: File) => void\r\n    saveProfile: (newProfileData: ProfileDescriptionDataFormType)=> Promise<void | string>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        isFetching: state.appPage.isFetching,\r\n        userProfile: state.profilePage.userProfile,\r\n        userStatus: state.profilePage.status,\r\n        authUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\ntype ProfileContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\ntype ProfileType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\n\r\nclass ProfileClass extends React.Component<ProfileType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            if (this.props.authUserId !== null) {\r\n                userId = String(this.props.authUserId)\r\n            } else {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile()\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {this.props.isFetching ? <Preloader/> :\r\n                    <Profile userProfile={this.props.userProfile} userStatus={this.props.userStatus}\r\n                             updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.userId}\r\n                                updatePhoto={this.props.updatePhoto} saveProfile={this.props.saveProfile}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst ProfileContainer = compose<React.ComponentType>(withRedirect, withRouter,\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus,\r\n        toggleIsFetching , updatePhoto, saveProfile}))(ProfileClass)\r\n\r\n\r\nexport default ProfileContainer\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postInput\":\"FormsControls_postInput__UGwDH\",\"formControl\":\"FormsControls_formControl__dYuFv\",\"error\":\"FormsControls_error__azNq9\"};","import s from './FormsControls.module.css'\r\nimport {FC, ReactNode} from 'react';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nexport type FormControlProps = {\r\n    input: {\r\n        name: string;\r\n    };\r\n    meta: {\r\n        touched?: boolean;\r\n        error?: string;\r\n    }\r\n    children: ReactNode\r\n}\r\n\r\nexport const FormControl: FC<FormControlProps> = (props) => {\r\n    const {input, meta: {touched , error}, children} = props\r\n\r\n    const hasError = error && touched\r\n\r\n    return(\r\n        <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n            {children}\r\n            <div>\r\n                {hasError &&  <span className={s.error}>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Textarea: FC<FormControlProps> = (props) => {\r\n    const {input, meta,  ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input: FC<FormControlProps> = (props) => {\r\n    const {input, meta,  ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: string,\r\n                            name: string,\r\n                            validators: any[],\r\n                            component: React.FC<FormControlProps>,\r\n                            props?: { type: string },\r\n                            text: string = '') => {\r\n    return (\r\n        <div style={{display:'flex', gap: '10px', justifyContent: 'center', alignItems: 'center', color: 'black'}}>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   component={component}\r\n                   validate={validators}\r\n                   {...props}/>\r\n            {text}\r\n        </div>\r\n    )\r\n}","export const required = (value: string) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return 'Field is required'\r\n    }\r\n}\r\n\r\nexport const maxLength = (maxLength : number) => (value: string) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    } else {\r\n        return undefined\r\n    }\r\n}"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","props","userStatus","updateStatus","isOwner","useState","editMode","setEditMode","status","setStatus","useEffect","spanMode","className","s","onDoubleClick","inputMode","autoFocus","onChange","e","currentTarget","onBlur","ProfileHeader","userProfile","updatePhoto","src","photos","large","alt","target","files","type","ProfileContacts","title","href","rel","ProfileDescription","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","reduxForm","form","handleSubmit","initialValues","error","onSubmit","createField","Input","Textarea","ProfileInfo","saveProfile","newProfileData","then","Post","loading","message","likeCount","maxLength20","maxLength","Field","component","name","validate","required","placeholder","MyPostsContainer","connect","state","posts","profilePage","addPost","postsElements","post","id","values","newMessageBody","Profile","ProfileClass","userId","this","match","params","authUserId","String","history","getProfile","getStatus","refreshProfile","prevProps","prevState","isFetching","Preloader","React","compose","withRedirect","withRouter","appPage","auth","isAuth","toggleIsFetching","FormControl","input","meta","touched","children","hasError","restProps","validators","text","style","display","gap","justifyContent","alignItems","color"],"sourceRoot":""}