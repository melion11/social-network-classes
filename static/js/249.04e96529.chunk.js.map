{"version":3,"file":"static/js/249.04e96529.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","components/Users/User/User.tsx","components/Users/Users.tsx","redux/selectors/userSelectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__l7RqQ\",\"page-carousel\":\"Paginator_page-carousel__qiSVo\",\"page-carousel__pages\":\"Paginator_page-carousel__pages__j9aAm\",\"page-carousel__page\":\"Paginator_page-carousel__page__ZRDZO\",\"page-carousel__page--selected\":\"Paginator_page-carousel__page--selected__OGkFJ\"};","import React from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\n\r\nexport type  PaginatorPropsType = {\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    handlePageClick: (page: number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> = (props) => {\r\n    const {pageSize, currentPage, handlePageClick, totalUserCount} = props\r\n\r\n    const pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    const pages = Array.from({length: pagesCount}, (_, i) => i + 1);\r\n    const curP = props.currentPage;\r\n    const curPF = Math.max(curP - 3, 0);\r\n    const curPL = Math.min(curP + 3, pagesCount);\r\n    let slicedPages: any[] = pages.slice(curPF, curPL);\r\n\r\n    if (curPF > 0) {\r\n        slicedPages = [1, '...', ...slicedPages];\r\n    }\r\n\r\n    if (curPL < pagesCount) {\r\n        slicedPages = [...slicedPages, '...', pagesCount];\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s['page-carousel']}>\r\n            <div className={s['page-carousel__pages']}>\r\n                {slicedPages.map((page) =>\r\n                    page === '...' ?\r\n                        <span key={page} className={`${s['page-carousel__page']} \r\n                                  ${s['page-carousel__page--disabled']}`}>\r\n                                 {page}\r\n                            </span> :\r\n                        <span key={page}\r\n                              className={`${s['page-carousel__page']} \r\n                                  ${currentPage === page ? s['page-carousel__page--selected'] : ''}`}\r\n                              onClick={() => handlePageClick(page)}>\r\n                                  {page}\r\n                            </span>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"usersContainer\":\"Users_usersContainer__To1jm\",\"user-card\":\"Users_user-card__p2zC0\",\"user-card__avatar\":\"Users_user-card__avatar__Z1-Dr\",\"user-card__info-container\":\"Users_user-card__info-container__SsYx+\",\"user-card__name\":\"Users_user-card__name__gbw9i\",\"user-card__status\":\"Users_user-card__status__EsMHn\",\"user-card__location\":\"Users_user-card__location__Lm78N\",\"user-card__country\":\"Users_user-card__country__-I+lV\",\"user-card__follow-btn\":\"Users_user-card__follow-btn__9yt5V\",\"user-card__unfollow-btn\":\"Users_user-card__unfollow-btn__yK0+Z\"};","import React from 'react';\r\nimport s from '../Users.module.css';\r\nimport userPhoto from './../../../assets/images/user.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UserProfilePhotosType} from '../../../redux/reducers/profileReducer';\r\n\r\n\r\n\r\n\r\nexport type  UsersPropsType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: UserProfilePhotosType\r\n    getUnfollowUserHandler: (userId: number) => void\r\n    getFollowUserHandler: (userId: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const User: React.FC<UsersPropsType> = (props) => {\r\n    const {id, followed, followingInProgress, getUnfollowUserHandler,\r\n        getFollowUserHandler, name, status, photos} = props\r\n\r\n\r\n    return (\r\n            <div key={id} className={s['user-card']}>\r\n                <div className={s['user-card__avatar']}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        <img src={photos.small !== null ? photos.small : userPhoto} alt=\"Avatar\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s['user-card__info-container']}>\r\n                    <div>\r\n                        <div className={s['user-card__name']}>{name}</div>\r\n                        <div className={s['user-card__status']}>{status}</div>\r\n                    </div>\r\n                    <div>\r\n                        {followed ?\r\n                            <button disabled={followingInProgress.some(id => id === id)}\r\n                                    onClick={() => {getUnfollowUserHandler(id)}}\r\n                                    className={s['user-card__unfollow-btn'] + (followingInProgress ? ' disabled' : '')}>\r\n                                Unfollow\r\n                            </button> :\r\n                            <button disabled={followingInProgress.some(id => id === id)}\r\n                                    onClick={() => {getFollowUserHandler(id)}}\r\n                                    className={s['user-card__follow-btn'] + (followingInProgress ? ' disabled' : '')}>\r\n                                Follow\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Paginator} from '../common/Paginator/Paginator';\r\nimport {User} from './User/User';\r\nimport {UserType} from '../../redux/reducers/userReducer';\r\nimport s from './Users.module.css';\r\n\r\nexport type  UsersPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    handlePageClick: (page: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = (props) => {\r\n    const {currentPage,pageSize,handlePageClick,\r\n        totalUserCount,users,followingInProgress,follow,unfollow} = props\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paginator pageSize={pageSize} totalUserCount={totalUserCount} currentPage={currentPage} handlePageClick={handlePageClick}/>\r\n\r\n            <div className={s.usersContainer}>\r\n            {users.map(u => {\r\n                const getFollowUserHandler = (userId: number) => {\r\n                    follow(userId)\r\n                }\r\n                const getUnfollowUserHandler = (userId: number) => {\r\n                    unfollow(userId)\r\n                }\r\n\r\n                return (\r\n                  <User key={u.id} followingInProgress={followingInProgress} getFollowUserHandler={getFollowUserHandler}\r\n                  getUnfollowUserHandler={getUnfollowUserHandler} id={u.id} name={u.name} photos={u.photos} status={u.status}\r\n                        followed={u.followed}\r\n                  />\r\n                );\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import {StateType} from '../redux-store';\r\n\r\nexport const getUsers = (state: StateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: StateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state: StateType) => {\r\n    return state.usersPage.totalUserCount\r\n}\r\n\r\nexport const getCurrentPage = (state: StateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getFollowingInProgress = (state: StateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, getRequestUsers, unfollow, UserType} from '../../redux/reducers/userReducer';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../common/Preloader/Preloader';\r\nimport {withRedirect} from '../../hoc/withRedirect';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from '../../redux/selectors/userSelectors';\r\nimport {StateType} from '../../redux/redux-store';\r\n\r\nexport class UsersClass extends React.Component<MapStateToPropsType & MapDispatchToPropsType, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    handlePageClick = (page: number) => {\r\n        this.props.getUsers(page, this.props.pageSize)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isFetching ? <Preloader/> :\r\n                    <Users\r\n                        users={this.props.users}\r\n                        pageSize={this.props.pageSize}\r\n                        totalUserCount={this.props.totalUserCount}\r\n                        currentPage={this.props.currentPage}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        handlePageClick={this.handlePageClick}\r\n                        followingInProgress={this.props.followingInProgress}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport type MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: state.appPage.isFetching,\r\n        followingInProgress: getFollowingInProgress(state),\r\n\r\n    }\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\n\r\nconst UsersContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {follow,unfollow,getUsers: getRequestUsers}), withRedirect)(UsersClass)\r\n\r\nexport default UsersContainer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch) => {\r\n//     return {\r\n//         getFollowUser: (userId: number, followValue: boolean) => {\r\n//             dispatch(getFollowAC(userId, followValue))\r\n//         },\r\n//         getUnfollowUser: (userId: number, followValue: boolean) => {\r\n//             dispatch(getUnfollowAC(userId, followValue))\r\n//         },\r\n//         setUsers: (users: UserType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setSelectedPage: (page: number) => {\r\n//             dispatch(setSelectedPageAC(page))\r\n//         },\r\n//         setTotalUsersCount: (totalUserCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalUserCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n//\r\n// }"],"names":["Paginator","props","pageSize","currentPage","handlePageClick","totalUserCount","pagesCount","Math","ceil","pages","Array","from","length","_","i","curP","curPF","max","curPL","min","slicedPages","slice","className","s","map","page","onClick","User","id","followed","followingInProgress","getUnfollowUserHandler","getFollowUserHandler","name","status","photos","to","src","small","userPhoto","alt","disabled","some","Users","users","follow","unfollow","u","userId","getUsers","state","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getFollowingInProgress","UsersClass","this","isFetching","Preloader","React","compose","connect","appPage","getRequestUsers","withRedirect"],"sourceRoot":""}